<!DOCTYPE html>
<html ng-app>
<head>
  <title>Data Cache</title>
  <link rel="stylesheet" type="text/css" href="asset/bootstrap.css">
  <link rel="stylesheet" type="text/css" href="asset/bootstrap-responsive.css">
  <link rel="stylesheet" type="text/css" href="asset/main.css">
  <link rel="icon" type="image/ico" href="asset/favicon.ico"/>

</head>
<body>
  <div class="navbar navbar-fixed-top">
	  <div class="navbar-inner">
	    <div class="container">
	      <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
	        <span class="icon-bar"></span>
	        <span class="icon-bar"></span>
	        <span class="icon-bar"></span>
	      </a>
	      <a class="brand" href="http://datacache.org/">DataCache</a>
	      <div class="nav-collapse">
		<ul class="nav">
	          <li class="active"><a href="async">Async</a></li>
	          <li><a href="sync">Sync</a></li>
	          <li><a href="/cache">Cache</a></li>
	          <li><a href="https://github.com/rweigel/datacache">Source</a></li>
	          <li><a href="log">Log</a></li>
	        </ul>
	      </div><!--/.nav-collapse -->
	    </div>
	  </div>
	</div>
<div class="container">
	<div class="row">
	
	    <div class="span6">
	      <h2>Submit URLs</h2>
	      <form id="urlForm" action="async" method="post">
			<p>
			  Presets: | <span id="presets"></span>
			</p>
			<p>
			  <input type='checkbox' name='forceUpdate' value='true' > Update <a href='cache'>cache</a> &nbsp; 
			  <input type='checkbox' name='acceptGzip' checked='checked' value='true' > accept-encoding: gzip, compress</input> 
			  <br/>
			  <input type='checkbox' name='includeData' value='true' > include data in response</input>&nbsp;
			  <input type='checkbox' name='includeMeta' value='true' > include metadata in response</input>
			</p>
			<p>
			  <span style="vertical-align:middle">Max tries: <input type='text' name='maxTries' style="width: 1em;" value="2" /></span>
			  <span style="vertical-align:middle">Cache subdir: <input type='text' name='dir' style="width: 10em;"/></span>
			  <span style="vertical-align:middle">Plug-in: <input type='text' name='plugin' style="width: 10em;"/></span>		  
			<p>
			  <input type='submit'/>
			</p>
			<p>
			  <textarea id='urls' rows='10' cols='100' name='source'></textarea>
			</p>
			<p>
			  <input type='submit'/>
			</p>	
	      </form>	
	    </div>
	
	    <div class="span6">	
	      <div class="row">
			<h2>Log:</h2>
			<div id="result" ng-controller="LogCtrl">
				  |<a href="" ng-click="clear()"> Clear </a>|&nbsp;
				Show: <input type="checkbox" ng-model="pendingOnly"> unfinished 	
				<input type="checkbox" ng-model="finishedOnly"> finished |
				<hr/>
				<div class="log" ng-repeat="log in showLogs()">
				    {{log.type}} : {{log.work.url}}<br>
				    
				    <div ng-show="log.work.isFromCache"><font color="orange">Found in cache.</font></div>
				    <div ng-show="log.type=='finish'"> 
				      <div ng-show="!log.work.isFromCache">
					Time: <font color="green">{{log.work.time}} ms</font>
				      </div>
				      data length: {{log.work.dataLength}}<br>
				      data md5: {{log.work.dataMd5}}<br>
				      url md5: {{log.work.urlMd5}}<br>
				      File: <a target="_blank" href="{{cacheUrl(log)+'.data'}}">data</a> 
				      | <a target="_blank" href="{{cacheUrl(log)+'.out'}}"> response </a>  
				      | <a target="_blank" href="{{cacheUrl(log)+'.header'}}"> header </a> 
				      | <a target="_blank" href="{{cacheUrl(log)+'.log'}}"> log </a>
				    </div>		    
				</div>
			</div>
	      </div>            
		</div>
		
	</div>
    <hr>

   <footer>
   </footer>
</div>
<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.0.2/angular.min.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
<script type="text/javascript" src="asset/jquery.form.js"></script>
<script type="text/javascript" src="asset/bootstrap.min.js"></script>
<script type="text/javascript" src="socket.io/socket.io.js"></script>
<script type="text/javascript">
$(document).ready(function(){
	$('#urlForm').ajaxForm();

	$.getJSON("api/presets", function(data){
		data.forEach(function(d){
			var a = $("<a>")
				.attr("style", "cursor:pointer")
				.click(function(){
					$("#urls").val(d.urls);
				})
				.html(d.name);
			$("#presets").append(a);
			$("#presets").append("&nbsp;| ");
		})
	})
})

// TODO: Determine which one to use based on URL
//var socket = io.connect('http://aurora.gmu.edu:8000/');

var socket;

if(location.href.indexOf("datacache.org") > -1){
	socket = io.connect('http://datacache.org/',{resource: "dc/socket.io"});
} else {
	socket = io.connect('');
}

//var socket = io.connect('',{resource: "dc/socket.io"});

// socket.on("log", function(data){
// 	var entry = $("<div/>", {class: "log"});
// 	entry.append(data.msg);
// 	var work = data.work;
// 	if(work){
// 		if(work.error){
// 			entry.append("<br><font color='red'>Error:"+work.error+"</font><br>Tried " + (work.tries || 1) + " times");
// 		} else {
// 			var cacheUrl = "/cache/"+work.url.split("/")[2]+"/"+work.urlMd5;
// 			entry.append((work.isFromCache ? "<br><font color='orange'>Found in cache.</font>" : "")
// 				+"<br>Time: <font color='green'>"+work.time + "ms</font>"
// 				+"<br> data md5: "+work.md5
// 				+"<br> url md5: "+work.urlMd5
// 				+"<br> File: <a target='_blank' href='"+ cacheUrl+".data'>data</a> | <a target='_blank' href='"
// 				+cacheUrl+".out'> response </a>  | <a target='_blank' href='"
// 				+cacheUrl+".header'> header </a> | <a target='_blank' href='"
// 				+cacheUrl + ".log'> log </a>");
// 		}
// 	}
// 	$("#result").prepend(entry);
// })
function LogCtrl($scope){
	$scope.logs = [];
	$scope.pendingLogs = [];
	$scope.clear = function(){
		$scope.logs = [];
		$scope.pendingLogs = [];
	}
	$scope.cacheUrl = function(log){
		return "/cache/"+log.work.url.split("/")[2]+"/"+log.work.urlMd5;
	}
	$scope.showLogs = function(){
		if(!$scope.pendingOnly){
			return $scope.logs;
		} else {
			return $scope.pendingLogs;
		}
	}

	socket.on("log", function(data){
		$scope.logs.unshift(data);
		if(data.type==="finish"){
			var tmp = [];
			for(var i=0;i<$scope.pendingLogs.length;i++){
				if($scope.pendingLogs[i].work.id!==data.work.id){
					tmp.push($scope.pendingLogs[i]);
				}
			}
			$scope.pendingLogs = tmp;
		} else {
			$scope.pendingLogs.unshift(data);
		}
	})

	setInterval(function(){
		$scope.$apply(function(){
			// $scope.logs = $scope.logsBuffer;

		});
	}, 300);
}
</script>
</body>
</html>